{"version":3,"sources":["style/colors.js","components/share/sidebar/SidebarItems.jsx","style/mediaQueries.js","components/share/icons/BarIcon.jsx","components/share/sidebar/ToggleSidebarButton.jsx","components/share/sidebar/Sidebar.jsx","lib/ajax/request.js","helpers/apiCall/fetchData.js","redux/modules/cats.js","helpers/notify/notify.js","components/Navigation.jsx","components/share/gallery/Gallery.jsx","components/share/button/Button.jsx","components/share/gallery/LazyGallery.jsx","components/CatGallery.jsx","components/Content.jsx","components/share/spinner/Spinner.jsx","components/share/spinner/FullScreenSpinner.jsx","components/Loading.jsx","App.js","style/GloablStyles.jsx","redux/configureStore.js","index.js"],"names":["bg","text","hoverBg","SidebarItem","styled","div","active","colors","SidebarItems","items","onClick","activeId","map","item","index","id","name","small","BarIconContainer","BarItem","BarIcon","ToggleButton","button","MQ","ToggleSidebarButton","Drawer","isOpen","SidebarTitle","Sidebar","logo","onItemClick","useState","setOpen","setActiveId","API_URL","ObjToQueryParams","obj","query","key","encodeURIComponent","get","url","data","a","headers","queryParams","apiUrl","fetch","response","ok","error","Error","json","resData","post","method","body","JSON","stringify","getCats","params","req","limit","getCategories","RELOAD","LOAD_MORE","SET_LOADING_STATUS","initialState","list","loading","page","loadCats","onFail","dispatch","setLoadingStatus","fetchCats","cats","action","loadMore","reload","category_ids","type","payload","status","store","getCatsLoadingStaus","notify","msg","alert","Navigation","useDispatch","categories","setCategories","useEffect","fetchErrorHandler","src","alt","Grid","GridItem","CatList","products","product","StyledButton","fullWidth","primary","Button","others","LazyGallery","onLoadMore","CatGallery","category","currentPage","ContentContainer","DashbordTitle","p","Content","useSelector","length","StyledSpinner","svg","Spinner","viewBox","className","cx","cy","r","fill","strokeWidth","LoadingContainer","FullScreenSpinner","Loading","Container","AppLayout","GlobalStyles","createGlobalStyle","reducer","combineReducers","state","createStore","applyMiddleware","thunk","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52ed3884.chunk.js","sourcesContent":["export default {\n  primary: {\n    bg: \"#78378b\",\n    text: \"#fff\",\n    hoverBg: \"#78478b\",\n  },\n  neutral: {\n    bg: \"#fff\",\n    text: \"#000\",\n    hoverBg: \"#f1f1f1\",\n  },\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../../../style/colors\";\n\nconst SidebarItem = styled.div`\n  cursor: pointer;\n  padding: 16px;\n  background: ${({ active }) =>\n    active ? colors.primary.bg : colors.neutral.bg};\n  color: ${({ active }) =>\n    active ? colors.primary.text : colors.neutral.text};\n  &:hover {\n    background: ${({ active }) =>\n      active ? colors.primary.hoverBg : colors.neutral.hoverBg};\n  }\n`;\n\nexport default function SidebarItems({ items, onClick, activeId }) {\n  return items.map((item, index) => (\n    <SidebarItem\n      key={item.id}\n      onClick={() => onClick(item)}\n      active={item.id == activeId}\n    >\n      {item.name}\n    </SidebarItem>\n  ));\n}\n","export const xsmall = \"@media (max-width: 576px)\";\nexport const small = \"@media (max-width: 768px)\";\nexport const medium = \"@media (max-width: 992px)\";\nexport const large = \"@media (min-width: 992px)\";\nexport const xlarge = \"@media (min-width: 1200px)\";\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst BarIconContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst BarItem = styled.div`\n  width: 22px;\n  height: 3px;\n  background-color: #555;\n  margin: 2px 0;\n`;\n\nexport default function BarIcon() {\n  return (\n    <BarIconContainer>\n      <BarItem />\n      <BarItem />\n      <BarItem />\n    </BarIconContainer>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport * as MQ from \"../../../style/mediaQueries\";\nimport BarIcon from \"../icons/BarIcon\";\n\nconst ToggleButton = styled.button`\n  display: none;\n  position: fixed;\n  top: 10px;\n  left: 0;\n  border: none;\n  outline: none;\n  box-shadow: 2px 0 8px rgba(0, 0, 0, 0.15);\n  z-index: 2;\n  border-radius: 0 4px 4px 0;\n  align-items: center;\n  background: #fff;\n  cursor: pointer;\n  height: 40px;\n  justify-content: center;\n  line-height: 40px;\n  text-align: center;\n  width: 45px;\n  ${MQ.small} {\n    display: inline-block;\n  }\n`;\n\nexport default function ToggleSidebarButton({ onClick }) {\n  return (\n    <ToggleButton onClick={onClick}>\n      <BarIcon />\n    </ToggleButton>\n  );\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport SidebarItems from \"./SidebarItems\";\nimport ToggleSidebarButton from \"./ToggleSidebarButton\";\nimport * as MQ from \"../../../style/mediaQueries\";\n\nconst Drawer = styled.div`\n  width: 250px;\n  height: 100vh;\n  overflow-x: hidde;\n  overflow-y: auto;\n  background: #fff;\n  box-shadow: 0 0 4px #aaa;\n  position: fixed;\n  transition: all 250ms;\n  left: 0;\n  top: 0;\n  ${MQ.small} {\n    left: ${({ isOpen }) => (isOpen ? \"0\" : \"-250px\")};\n  }\n`;\n\nconst SidebarTitle = styled.div`\n  padding: 16px;\n  border-bottom: 1px solid #ddd;\n  img {\n    filter: brightness(0.8);\n  }\n`;\n\nexport default function Sidebar({ logo, items, onItemClick }) {\n  const [isOpen, setOpen] = useState(false);\n  const [activeId, setActiveId] = useState();\n\n  const handleItemClick = ({ id }) => {\n    setActiveId(id);\n    setOpen(false);\n    onItemClick(id);\n  };\n\n  return (\n    <>\n      <ToggleSidebarButton onClick={() => setOpen(!isOpen)} />\n      <Drawer isOpen={isOpen}>\n        <SidebarTitle>{logo}</SidebarTitle>\n        <SidebarItems\n          activeId={activeId}\n          items={items}\n          onClick={handleItemClick}\n        />\n      </Drawer>\n    </>\n  );\n}\n","const API_URL = \"https://api.thecatapi.com/v1/\";\n\nconst ObjToQueryParams = (obj) => {\n  let query = \"\";\n  for (let key in obj) {\n    query += `${key}=${encodeURIComponent(obj[key])}&`;\n  }\n\n  return query;\n};\n\n// Make GET Request\nconst get = async (url, data, headers = {}) => {\n  const queryParams = ObjToQueryParams(data);\n  const apiUrl = API_URL + url + queryParams;\n  const response = await fetch(apiUrl, { headers });\n\n  if (!response.ok) {\n    const error = await response.text();\n    throw new Error(error);\n  }\n\n  const resData = await response.json();\n\n  return resData;\n};\n\n// Make POST Request\nconst post = async (url, data, headers = {}) => {\n  const response = await fetch(API_URL + url, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      ...headers,\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    const error = await response.text();\n    throw new Error(error);\n  }\n\n  const resData = await response.json();\n\n  return resData;\n};\n\nexport default {\n  post,\n  get,\n};\n","import req from \"../../lib/ajax/request\";\n\nexport const getCats = async (params) =>\n  await req.get(\"images/search?\", { ...params, limit: 10 });\nexport const getCategories = async () => await req.get(\"categories\", {});\n","import { getCats as fetchCats } from \"../../helpers/apiCall/fetchData\";\n\nconst RELOAD = \"thecat-app/cats/RELOAD\";\nconst LOAD_MORE = \"thecat-app/cats/LOAD_MORE\";\nconst SET_LOADING_STATUS = \"thecat-app/cats/SET_LOADING_STATUS\";\n\nconst initialState = {\n  list: [],\n  loading: false,\n  page: 0,\n  id: \"\",\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOAD_MORE:\n      return {\n        ...state,\n        loading: false,\n        list: [...state.list, ...action.payload.cats],\n        page: state.page + 1,\n      };\n    case RELOAD:\n      return {\n        loading: false,\n        page: 0,\n        list: action.payload.cats,\n        id: action.payload.id,\n      };\n    case SET_LOADING_STATUS:\n      return { ...state, loading: action.payload.loading };\n    default:\n      return state;\n  }\n}\n\n// Actions\nexport const loadCats = (params, onFail) => {\n  return async (dispatch) => {\n    dispatch(setLoadingStatus(true));\n    try {\n      const cats = await fetchCats(params);\n      const action = params.page\n        ? loadMore(cats)\n        : reload({ cats, id: params.category_ids });\n      dispatch(action);\n    } catch (error) {\n      dispatch(setLoadingStatus(false));\n      onFail && onFail(error);\n    }\n  };\n};\n\nexport const loadMore = (cats) => ({\n  type: LOAD_MORE,\n  payload: { cats },\n});\n\nexport const reload = ({ cats, id }) => ({\n  type: RELOAD,\n  payload: { cats, id },\n});\n\nexport const setLoadingStatus = (status) => ({\n  type: SET_LOADING_STATUS,\n  payload: { loading: status },\n});\n\n// Selectors\nexport const getCats = (store) => store.cats;\nexport const getCatsLoadingStaus = (store) => store.cats.loading;\n","// TODO: Use a toast rather than alert\nexport const notify = (msg) => alert(msg);\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Sidebar from \"./share/sidebar/Sidebar\";\nimport { loadCats } from \"../redux/modules/cats\";\nimport { getCategories } from \"../helpers/apiCall/fetchData\";\nimport { notify } from \"../helpers/notify/notify\";\n\nexport default function Navigation() {\n  const dispatch = useDispatch();\n  const [categories, setCategories] = useState([]);\n\n  useEffect(async () => {\n    try {\n      const categories = await getCategories();\n      setCategories(categories);\n    } catch (error) {\n      fetchErrorHandler();\n    }\n  }, []);\n\n  const fetchErrorHandler = () =>\n    notify(\"Something went wrong! Please refresh the page\");\n\n  const fetchCat = (id) =>\n    dispatch(loadCats({ category_ids: id }, fetchErrorHandler));\n\n  const logo = <img src=\"logo.png\" alt=\"logo\" />;\n\n  return <Sidebar logo={logo} items={categories} onItemClick={fetchCat} />;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport * as MQ from \"../../../style/mediaQueries\";\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 15px;\n  grid-auto-rows: 210px;\n  ${MQ.medium} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  ${MQ.xsmall} {\n    grid-template-columns: repeat(1, 1fr);\n  }\n  ${MQ.xlarge} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`;\n\nconst GridItem = styled.div`\n  box-shadow: 0 0 3px #aaa;\n  cursor: pointer;\n  box-shadow: -2px 2px 10px 0px rgba(0.4, 0.4, 0.4, 0.4);\n  transition: all 200ms;\n  cursor: pointer;\n  &:hover {\n    box-shadow: 0 0 8px #888;\n  }\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport default function CatList({ products }) {\n  return (\n    <Grid>\n      {products.map((product, index) => (\n        <GridItem key={product.id + index}>\n          <img src={product.url} />\n        </GridItem>\n      ))}\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../../../style/colors\";\n\nconst StyledButton = styled.button`\n  display: inline-block;\n  width: ${({ fullWidth }) => (fullWidth ? \"100%\" : \"auto\")};\n  border: none;\n  outline: none;\n  border-radius: 2px;\n  cursor: pointer;\n  transition: all 200ms;\n  margin: 15px 0;\n  line-height: 2.5;\n  background: ${({ primary }) =>\n    primary ? colors.primary.bg : colors.neutral.bg};\n  color: ${({ primary }) =>\n    primary ? colors.primary.text : colors.neutral.text};\n  &:hover {\n    background: ${({ primary }) =>\n      primary ? colors.primary.hoverBg : colors.neutral.hoverBg};\n  }\n`;\n\nexport default function Button({ primary, fullWidth, ...others }) {\n  return <StyledButton primary={primary} fullWidth={fullWidth} {...others} />;\n}\n","import React from \"react\";\nimport Gallery from \"./Gallery\";\nimport Button from \"../button/Button\";\n\nexport default function LazyGallery({ products, onLoadMore }) {\n  return (\n    <>\n      <Gallery products={products} />\n      <Button onClick={onLoadMore} primary={true} fullWidth={true}>\n        Load more...\n      </Button>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { notify } from \"../helpers/notify/notify\";\nimport { loadCats } from \"../redux/modules/cats\";\nimport LazyGallery from \"./share/gallery/LazyGallery\";\n\nexport default function CatGallery({ cats, category, currentPage }) {\n  const dispatch = useDispatch();\n\n  const fetchErrorHandler = () =>\n    notify(\"Something went wrong! Please try again\");\n\n  const handleLoadMore = () => {\n    const getCatsReqParams = {\n      category_ids: category,\n      page: currentPage + 1,\n    };\n    dispatch(loadCats(getCatsReqParams, fetchErrorHandler));\n  };\n\n  return <LazyGallery products={cats} onLoadMore={handleLoadMore} />;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { getCats } from \"../redux/modules/cats\";\nimport CatGallery from \"./CatGallery\";\n\nconst ContentContainer = styled.div`\n  padding: 15px;\n  flex: 1;\n`;\n\nconst DashbordTitle = styled.p`\n  background: #fff;\n  padding: 30px;\n  border: 1px solid #e1e1e1;\n  font-size: 2em;\n`;\n\nexport default function Content() {\n  const { list: cats, page, id } = useSelector(getCats);\n\n  return (\n    <ContentContainer>\n      {cats.length == 0 ? (\n        <DashbordTitle>Please Select a category</DashbordTitle>\n      ) : (\n        <CatGallery cats={cats} category={id} currentPage={page} />\n      )}\n    </ContentContainer>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../../../style/colors\";\n\nconst StyledSpinner = styled.svg`\n  animation: rotate 2s linear infinite;\n  margin: -25px 0 0 -25px;\n  width: 50px;\n  height: 50px;\n\n  & .path {\n    stroke: ${colors.primary.bg};\n    stroke-linecap: round;\n    animation: dash 1.5s ease-in-out infinite;\n  }\n\n  @keyframes rotate {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes dash {\n    0% {\n      stroke-dasharray: 1, 150;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -35;\n    }\n    100% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -124;\n    }\n  }\n`;\n\nexport default function Spinner() {\n  return (\n    <StyledSpinner viewBox=\"0 0 50 50\">\n      <circle\n        className=\"path\"\n        cx=\"25\"\n        cy=\"25\"\n        r=\"20\"\n        fill=\"none\"\n        strokeWidth=\"4\"\n      />\n    </StyledSpinner>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Spinner from './Spinner';\n\nconst LoadingContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left:0;\n  right:0;\n  bottom:0;\n  width:100%;\n  height: 100%;\n  display: flex;\n  justify-content:center;\n  align-items: center;\n  background: rgba(0,0,0,.3);\n  color: #fff;\n  z-index:10;\n`;\n\nexport default function FullScreenSpinner(){\n  return (<LoadingContainer><Spinner/></LoadingContainer>);\n}","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getCatsLoadingStaus } from \"../redux/modules/cats\";\nimport FullScreenSpinner from \"./share/spinner/FullScreenSpinner\";\n\nexport default function Loading() {\n  const isLoading = useSelector(getCatsLoadingStaus);\n\n  return isLoading ? <FullScreenSpinner /> : null;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Navigation from \"./components/Navigation\";\nimport Content from \"./components/Content\";\nimport Loading from \"./components/Loading\";\nimport * as MQ from \"./style/mediaQueries\";\n\nconst Container = styled.div`\n  display: flex;\n  padding-left: 250px;\n  ${MQ.small} {\n    padding-left: 0;\n  }\n`;\n\nexport default function AppLayout() {\n  return (\n    <Container>\n      <Navigation />\n      <Content />\n      <Loading />\n    </Container>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n  html, body {\n    margin: 0;\n    padding: 0;\n    background: #f5f5f5;\n    font-family: sans-serif, Arial, Roboto, Helvetica;\n  }\n  *, *::after, *::before {\n    box-sizing: border-box;\n  }\n  `;\n\nexport default GlobalStyles;\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport cats from \"./modules/cats\";\n\nconst reducer = combineReducers({ cats });\nconst configureStore = () => createStore(reducer, applyMiddleware(thunk));\n\nexport default configureStore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport GlobalStyles from \"./style/GloablStyles\";\nimport configureStore from \"./redux/configureStore\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <GlobalStyles />\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}